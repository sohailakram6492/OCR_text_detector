SELECT  
o103901.SHORT_DESC||' '||o102891.NARRATIVE as Particular,
DECODE(( CASE WHEN NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY) < 0 THEN 'DR' ELSE 'CR' END ),'DR',NVL(o102891.AMOUNT_FCY*-1,o102891.AMOUNT_LCY*-1),0) as DEBIT,
DECODE(( CASE WHEN NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY) < 0 THEN 'DR' ELSE 'CR' END ),'CR',NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY),0) as CREDIT,
o102877.ACCOUNT_ID,o102877.ACCOUNT_TITLE_1,to_char(o102891.BOOKING_DATE,'dd-Mon-yyyy')BOOKING_DATE,o103132.BRN_CODE,o103132.COMPANY_NAME BRANCH_NAME,o102877.CURRENCY,o102891.DATE_TIME,
to_char(o102877.OPENING_DATE,'dd-Mon-yyyy')OPENING_DATE,to_char(o102891.VALUE_DATE,'dd-Mon-yyyy')VALUE_DATE,
( o102877.CLOSING_BALANCE+SUM(( DECODE(( CASE WHEN NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY) < 0 THEN 'DR' ELSE 'CR' END ),'DR',NVL(o102891.AMOUNT_FCY*-1,o102891.AMOUNT_LCY*-1),0) )) OVER() )-SUM(( DECODE(( CASE WHEN NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY) < 0 THEN 'DR' ELSE 'CR' END ),'CR',NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY),0) )) OVER()+SUM(( DECODE(( CASE WHEN NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY) < 0 THEN 'DR' ELSE 'CR' END ),'CR',NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY),NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY)) )) OVER(ORDER BY  o102891.DATE_TIME , ( SUBSTR(o102891.STMT_ID,1,5)||SUBSTR(o102891.STMT_ID,11,8) ) ASC  ROWS  UNBOUNDED PRECEDING ) as Balance,
( o102877.CLOSING_BALANCE+SUM(( DECODE(( CASE WHEN NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY) < 0 THEN 'DR' ELSE 'CR' END ),'DR',NVL(o102891.AMOUNT_FCY*-1,o102891.AMOUNT_LCY*-1),0) )) OVER() )-SUM(( DECODE(( CASE WHEN NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY) < 0 THEN 'DR' ELSE 'CR' END ),'CR',NVL(o102891.AMOUNT_FCY,o102891.AMOUNT_LCY),0) )) OVER() as Opening_Bal
 FROM (    
           Select To_Number(ACCOUNT_ID)  Acctno,
           To_Number(A.OPEN_ACTUAL_BAL) A,
           To_Number(A.OPEN_CLEARED_BAL) B,
           To_Number(A.ONLINE_ACTUAL_BAL) C,
           to_number(Case When A.RECORD_STATUS = 'CLOSED' Then A.ONLINE_ACTUAL_BAL ELSE A.OPEN_ACTUAL_BAL END) CLOSING_BALANCE,
           To_Number(A.ONLINE_CLEARED_BAL)  D,
           To_Number(A.WORKING_BALANCE) ,
           To_Date(A.CHG_EXM_DATE, 'YYYYMMDD') CHG_EXM_DATE2, 
           To_Date(A.DATE_OF_BIRT, 'YYYYMMDD') DATE_OF_BIRT2,
           To_Number(A.ACT_STATUS) ACT_STATUS2,
           To_number(PRODCAT) PRODCAT2,          
            ACCOUNT_ID  ,
            CUSTOMER  ,
            CATEGORY  ,
            account_title_2,
            --ACCOUNT_TITLE_1  ,
            Case When chg_deduc='NO' And chg_exm_reason=4 Then 'Staff A/c - Contact Branch' Else ACCOUNT_TITLE_1 End ACCOUNT_TITLE_1,
            CURRENCY  ,
            LIMIT_REF  ,
            ACCOUNT_OFFICER  ,
            POSTING_RESTRICT  ,
            DATE_LAST_CR_CUST  ,
            DATE_LAST_DR_CUST  ,
            RECORD_STATUS  ,
            INPUTTER  ,
            DATE_TIME  ,
            AUTHORISER  ,
            CO_CODE  ,
            DEPT_CODE  ,
            ALT_ACCT_ID  ,
            ACT_TYPE  ,
            ACT_NATR  ,
            ATM  ,
            ADD_PREF  ,
            OPR_INST  ,
            ZAKAT_DEDUC  ,
            ZAK_REASON  ,
            MARKT_BY  ,
            TAX_EXEMP  ,
            EXEMP_DATE  ,
            CHG_DEDUC  ,
            CHG_EXM_REASON  ,
            ACT_STATUS  ,
            DATE_LST_COMM  ,
            AC_INDUSTRY  ,
            CHG_EXM_DATE  ,
            CHEQUE_BOOK  ,
            DATE_OF_BIRT  ,
            ACCOUNT_NUMBER  ,
            SECTOR  ,
            INDUSTRY  ,
            TARGET  ,
            RESIDENCE  ,
            PRODCAT  ,
            PRODCCY  ,
            Case When chg_deduc='NO' And chg_exm_reason=4 Then 'Staff A/c - Contact Branch' Else ACCOUNT_TITLE_1 End SHORT_TITLE  ,
            RECONCILE_ACCT  ,
            INTEREST_LIQU_ACCT  ,
            INTEREST_COMP_ACCT  ,
            INT_NO_BOOKING  ,
            CONDITION_GROUP  ,
            INACTIV_MARKER  ,
            OPEN_ACTUAL_BAL  ,
            OPEN_CLEARED_BAL  ,
            ONLINE_ACTUAL_BAL  ,
            ONLINE_CLEARED_BAL  ,
            WORKING_BALANCE  ,
            DATE_LAST_CR_AUTO  ,
            DATE_LAST_CR_BANK  ,
            DATE_LAST_DR_AUTO  ,
            DATE_LAST_DR_BANK  ,
            ACCR_CR_AMOUNT  ,
            ACCR_CR_SUSP  ,
            ACCR_DR_AMOUNT  ,
            ACCR_DR_SUSP  ,
            CONSOL_KEY  ,
            CLOSURE_DATE  ,
            NETTING_SUSPENSE  ,
            ALLOW_NETTING  ,
            NEXT_STMT_DATE  ,
            LAST_MODIFIED_DATE  ,
            KYC_OC_LOB_V  ,
            KYC_OC_SATIS  ,
            KYC_OC_CMNTS  ,
            KYC_TYPE_ADD  ,
            KYC_TYPE_ADD_V  ,
            KYC_TYPE_ADD_C  ,
            KYC_MEANS_V  ,
            KYC_MEANS_O  ,
            KYC_SAL_SOURCE  ,
            KYC_I_AVG_SAL  ,
            KYC_C_AVG_SAL  ,
            KYC_RISK_PROF  ,
            KYC_RISK_PROF_O  ,
            KYC_NO_OF_TRANS  ,
            KYC_MONTH_TURNO  ,
            KYC_SING_THRESH  ,
            KYC_RISK_DATE  ,
            KYC_BRIEF_C  ,
            KYC_RISK_CATEG  ,
            to_number(KYC_RISK_CATEG),
            KYC_REVIEW_DATE  ,
            TRUNC(TO_DATE(KYC_REVIEW_DATE,'YYYYMMDD')) KYC_REVIEW_DATE_1,
            OPENING_DATE  ,
            RF_CLASS  ,
            LST_CUS_UB_CR  ,
            LST_CUS_UB_DR  ,
            SIG_STAT  ,
            IBR  ,
            CURR_NO  ,
            REVIEW_STATUS  ,
            CPU_COMMENTS  ,
            TRAN_LAST_DR_CUST  ,
            TRAN_LAST_CR_CUST  ,
            TRAN_LAST_DR_BANK  ,
            TRAN_LAST_CR_BANK  ,
            --PD_ACCT_NO  ,
            --APPROVED_SPREAD  ,
            --ACCT_DEBIT_INT  ,
            AC_NEXT_ACCT_CAP  ,
            REASON_CHANGE  ,
            OLD_ACT_STATUS  ,
            STATUS_DATE  ,
            buss_act_place,
            DATE_LAST_UPDATE,
            to_number(calc_risk_category) calc_risk_category  ,
            alt_acct_id as Old_Account_No,
            NTDR_NO,
            NTDSB,
            TDR_MAT_DATE,
            IBAN,
            FLAG,
            EXPIRY_DATE,
            BR_COMMENTS,
            Acc_Purp,
            Ben_Name,
            Counter_Party,
            Buss_Act_City,
            Bus_Act_Country,
            MAJ_BUY_NAME,
            Maj_Buy_Str,
            Maj_Buy_City,
            Maj_Buy_Prov,
            Maj_Buy_Cnt,
            Maj_Buy_Tel,
            Maj_Sup_Name,
            Maj_Sup_Str,
            Maj_Sup_City,
            Maj_Sup_Prov,
            Maj_Sup_Cntr,
            Maj_Sup_Pcode,
            Maj_Sup_Tel,
            Book_No,
            No_Of_Bages,
            Quantity,
            Website_Add,
            Cx_Vendor_Name,
            Husband_Name,
            lead_company,
            alrt_activation,
            activation_type,
            package_type,
            srv_subsc_date,
            stmt_on_email,
            trans_no,
            amount,
            wht_ded,
            purp_Acct,
            AC_TRANS_NO , AC_AMOUNT,
            to_number(ac_amount),
            Product_program,
            remarriage_date,
            life_date,
            DR_authority,
            BMS_APPLICATION,
            BMS_META1,
            BMS_RESPONSE,
            BMS_STATUS,
            substr(Inputter,instr(inputter,'_',1 ,1)+1 ,
            instr(inputter,'_',1 ,2)- instr(inputter,'_',1 ,1)-1 ) staff_id_inp,
            substr(AUTHORISER,instr(AUTHORISER,'_',1 ,1)+1 ,
            instr(AUTHORISER,'_',1 ,2)- instr(AUTHORISER,'_',1 ,1)-1 ) staff_id_auth,
            substr(Account_title_1,1,65) Act_Title,
            AC_OPN_CHNL
            from Account A
            --where A.CUSTOMER IS NOT NULL
            --where substr(ACCOUNT_ID, 1, 1) IN ('1', '2', '3', '4', '5', '6', '7', '8', '9', '0')
          ) o102877,

         ( SELECT A.*,
            To_Number(A.ORIG_LOCAL_EQUIV) LCEQ,
            To_Number(A.EXCHANGE_RATE) EX ,
            To_Number(ORIGINAL_EXCH_RATE) OEX,
            To_Number(CONTRACT_INT_RATE),
               --TO_CHAR(CUSTOMER_ID) Customer_ID2,
           decode((instr(A.trans_reference,'\')-1),-1,A.trans_reference,substr(A.trans_reference,1,(instr(A.trans_reference,'\')-1)))
           Transaction_REF,
           substr(A.Trans_Reference,1,12) Teller_Trans_Reference,
           substr(A.Trans_Reference,1,16) FT_Trans_Reference
                
           FROM STMT_ENTRY A
           --where A.CUSTOMER_ID IS NOT NULL
           --Where substr(ACCOUNT_NUMBER, 1, 1) IN ('1', '2', '3', '4', '5', '6', '7', '8', '9', '0')
         ) o102891,

      ( SELECT substr(c.company_ID,6,4)  brn_code,to_number(substr(c.company_ID,6,4) ) brn_code2,c.*  FROM COMPANY C
 ) o103132,
      ( SELECT * FROM TRANSACTION
     ) o103901
   WHERE ( (o102877.ACCOUNT_ID = o102891.ACCOUNT_NUMBER(+) AND o102877.LEAD_COMPANY = o102891.LEAD_COMPANY(+))
   AND (o102877.CO_CODE = o103132.COMPANY_ID AND o102877.LEAD_COMPANY = o103132.LEAD_COMPANY)
   AND (o102891.TRANSACTION_CODE = o103901.ID(+) AND o102891.LEAD_COMPANY = o103901.LEAD_COMPANY(+)))
   AND (o102891.BOOKING_DATE(+) >= :pm_v1)
   AND (o102877.ACCOUNT_ID = :pm_v2)
   
   